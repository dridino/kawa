State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On MAIN shift to state 1
-- On program shift to state 48
## Reductions:

State 1:
## Known stack suffix:
## MAIN
## LR(1) items:
program -> MAIN . BEGIN list(instruction) END EOF [ # ]
## Transitions:
-- On BEGIN shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## MAIN BEGIN
## LR(1) items:
program -> MAIN BEGIN . list(instruction) END EOF [ # ]
## Transitions:
-- On PRINT shift to state 3
-- On list(instruction) shift to state 43
-- On instruction shift to state 46
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 3:
## Known stack suffix:
## PRINT
## LR(1) items:
instruction -> PRINT . LPAR expression RPAR SEMI [ PRINT END ]
## Transitions:
-- On LPAR shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## PRINT LPAR
## LR(1) items:
instruction -> PRINT LPAR . expression RPAR SEMI [ PRINT END ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 40
## Reductions:

State 5:
## Known stack suffix:
## SUB
## LR(1) items:
unop -> SUB . [ SUB NOT LPAR INT BOOL ]
## Transitions:
## Reductions:
-- On SUB NOT LPAR INT BOOL
--   reduce production unop -> SUB

State 6:
## Known stack suffix:
## NOT
## LR(1) items:
unop -> NOT . [ SUB NOT LPAR INT BOOL ]
## Transitions:
## Reductions:
-- On SUB NOT LPAR INT BOOL
--   reduce production unop -> NOT

State 7:
## Known stack suffix:
## LPAR
## LR(1) items:
expression -> LPAR . expression RPAR [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 12
## Reductions:

State 8:
## Known stack suffix:
## INT
## LR(1) items:
expression -> INT . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
## Reductions:
-- On SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD
--   reduce production expression -> INT

State 9:
## Known stack suffix:
## BOOL
## LR(1) items:
expression -> BOOL . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
## Reductions:
-- On SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD
--   reduce production expression -> BOOL

State 10:
## Known stack suffix:
## unop
## LR(1) items:
expression -> unop . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## unop expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> unop expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
## Reductions:
-- On SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD
--   reduce production expression -> unop expression

State 12:
## Known stack suffix:
## LPAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> LPAR expression . RPAR [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On RPAR shift to state 19
-- On REM shift to state 20
-- On OR shift to state 22
-- On NEQ shift to state 34
-- On MUL shift to state 15
-- On LT shift to state 24
-- On LE shift to state 28
-- On GT shift to state 30
-- On GE shift to state 32
-- On EQ shift to state 36
-- On DIV shift to state 17
-- On AND shift to state 38
-- On ADD shift to state 26
## Reductions:

State 13:
## Known stack suffix:
## expression SUB
## LR(1) items:
expression -> expression SUB . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## expression SUB expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression SUB expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On MUL shift to state 15
-- On DIV shift to state 17
## Reductions:
-- On SUB RPAR REM OR NEQ LT LE GT GE EQ AND ADD
--   reduce production expression -> expression SUB expression

State 15:
## Known stack suffix:
## expression MUL
## LR(1) items:
expression -> expression MUL . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## expression MUL expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression MUL expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
## Reductions:
-- On SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD
--   reduce production expression -> expression MUL expression

State 17:
## Known stack suffix:
## expression DIV
## LR(1) items:
expression -> expression DIV . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## expression DIV expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression DIV expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
## Reductions:
-- On SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD
--   reduce production expression -> expression DIV expression

State 19:
## Known stack suffix:
## LPAR expression RPAR
## LR(1) items:
expression -> LPAR expression RPAR . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
## Reductions:
-- On SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD
--   reduce production expression -> LPAR expression RPAR

State 20:
## Known stack suffix:
## expression REM
## LR(1) items:
expression -> expression REM . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## expression REM expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression REM expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On MUL shift to state 15
-- On DIV shift to state 17
## Reductions:
-- On SUB RPAR REM OR NEQ LT LE GT GE EQ AND ADD
--   reduce production expression -> expression REM expression

State 22:
## Known stack suffix:
## expression OR
## LR(1) items:
expression -> expression OR . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## expression OR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression OR expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On LT shift to state 24
-- On LE shift to state 28
-- On GT shift to state 30
-- On GE shift to state 32
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ EQ AND
--   reduce production expression -> expression OR expression

State 24:
## Known stack suffix:
## expression LT
## LR(1) items:
expression -> expression LT . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 25
## Reductions:

State 25:
## Known stack suffix:
## expression LT expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression LT expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ LT LE GT GE EQ AND
--   reduce production expression -> expression LT expression

State 26:
## Known stack suffix:
## expression ADD
## LR(1) items:
expression -> expression ADD . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## expression ADD expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression ADD expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On MUL shift to state 15
-- On DIV shift to state 17
## Reductions:
-- On SUB RPAR REM OR NEQ LT LE GT GE EQ AND ADD
--   reduce production expression -> expression ADD expression

State 28:
## Known stack suffix:
## expression LE
## LR(1) items:
expression -> expression LE . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 29
## Reductions:

State 29:
## Known stack suffix:
## expression LE expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression LE expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ LT LE GT GE EQ AND
--   reduce production expression -> expression LE expression

State 30:
## Known stack suffix:
## expression GT
## LR(1) items:
expression -> expression GT . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## expression GT expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression GT expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ LT LE GT GE EQ AND
--   reduce production expression -> expression GT expression

State 32:
## Known stack suffix:
## expression GE
## LR(1) items:
expression -> expression GE . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 33
## Reductions:

State 33:
## Known stack suffix:
## expression GE expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression GE expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ LT LE GT GE EQ AND
--   reduce production expression -> expression GE expression

State 34:
## Known stack suffix:
## expression NEQ
## LR(1) items:
expression -> expression NEQ . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## expression NEQ expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression NEQ expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On LT shift to state 24
-- On LE shift to state 28
-- On GT shift to state 30
-- On GE shift to state 32
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ EQ AND
--   reduce production expression -> expression NEQ expression

State 36:
## Known stack suffix:
## expression EQ
## LR(1) items:
expression -> expression EQ . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## expression EQ expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression EQ expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On LT shift to state 24
-- On LE shift to state 28
-- On GT shift to state 30
-- On GE shift to state 32
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ EQ AND
--   reduce production expression -> expression EQ expression

State 38:
## Known stack suffix:
## expression AND
## LR(1) items:
expression -> expression AND . expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 5
-- On NOT shift to state 6
-- On LPAR shift to state 7
-- On INT shift to state 8
-- On BOOL shift to state 9
-- On unop shift to state 10
-- On expression shift to state 39
## Reductions:

State 39:
## Known stack suffix:
## expression AND expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression AND expression . [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
## Transitions:
-- On SUB shift to state 13
-- On REM shift to state 20
-- On MUL shift to state 15
-- On LT shift to state 24
-- On LE shift to state 28
-- On GT shift to state 30
-- On GE shift to state 32
-- On DIV shift to state 17
-- On ADD shift to state 26
## Reductions:
-- On RPAR OR NEQ EQ AND
--   reduce production expression -> expression AND expression

State 40:
## Known stack suffix:
## PRINT LPAR expression
## LR(1) items:
expression -> expression . ADD expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . SUB expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . MUL expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . DIV expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . REM expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . EQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . NEQ expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . LE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GT expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . GE expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . AND expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
expression -> expression . OR expression [ SUB RPAR REM OR NEQ MUL LT LE GT GE EQ DIV AND ADD ]
instruction -> PRINT LPAR expression . RPAR SEMI [ PRINT END ]
## Transitions:
-- On SUB shift to state 13
-- On RPAR shift to state 41
-- On REM shift to state 20
-- On OR shift to state 22
-- On NEQ shift to state 34
-- On MUL shift to state 15
-- On LT shift to state 24
-- On LE shift to state 28
-- On GT shift to state 30
-- On GE shift to state 32
-- On EQ shift to state 36
-- On DIV shift to state 17
-- On AND shift to state 38
-- On ADD shift to state 26
## Reductions:

State 41:
## Known stack suffix:
## PRINT LPAR expression RPAR
## LR(1) items:
instruction -> PRINT LPAR expression RPAR . SEMI [ PRINT END ]
## Transitions:
-- On SEMI shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## PRINT LPAR expression RPAR SEMI
## LR(1) items:
instruction -> PRINT LPAR expression RPAR SEMI . [ PRINT END ]
## Transitions:
## Reductions:
-- On PRINT END
--   reduce production instruction -> PRINT LPAR expression RPAR SEMI

State 43:
## Known stack suffix:
## MAIN BEGIN list(instruction)
## LR(1) items:
program -> MAIN BEGIN list(instruction) . END EOF [ # ]
## Transitions:
-- On END shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## MAIN BEGIN list(instruction) END
## LR(1) items:
program -> MAIN BEGIN list(instruction) END . EOF [ # ]
## Transitions:
-- On EOF shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## MAIN BEGIN list(instruction) END EOF
## LR(1) items:
program -> MAIN BEGIN list(instruction) END EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> MAIN BEGIN list(instruction) END EOF

State 46:
## Known stack suffix:
## instruction
## LR(1) items:
list(instruction) -> instruction . list(instruction) [ END ]
## Transitions:
-- On PRINT shift to state 3
-- On list(instruction) shift to state 47
-- On instruction shift to state 46
## Reductions:
-- On END
--   reduce production list(instruction) ->

State 47:
## Known stack suffix:
## instruction list(instruction)
## LR(1) items:
list(instruction) -> instruction list(instruction) . [ END ]
## Transitions:
## Reductions:
-- On END
--   reduce production list(instruction) -> instruction list(instruction)

State 48:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

