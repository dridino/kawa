
Paire p;
Paire pt;
Triple t;
Paire2 p2;

class Paire {
  int x;
  int y;

  method void constructor(int x, int y) {
    this.x = x;
    this.y = y;
  }

  method int somme() {
    return this.x + this.y;
  }

  method void testHeritage() {
    print(true);
  }
}

class Paire2 extends Paire {
  int x;
  int y;

  method void constructor(int x, int y) {
    this.x = x;
    this.y = y;
  }

  method int somme() {
    return this.x + this.y;
  }
}

class Triple extends Paire {
  int z;

  method void constructor(int x, int y, int z) {
    this.x = x;
    this.y = y;
    this.z = z;
  }

  method int somme() {
    return this.x + this.y + this.z;
  }

  method int produit() {
    return this.x * this.y * this.z;
  }
}

main {
  p = new Paire(1, 2);
  t = new Triple(3, 4, 5);
  print(p.somme());
  print(t.somme());
  print(t.produit());
  pt = new Triple(1, 2, 3);
  print(pt.somme());
  p = new Triple(1, 2, 3);
  print(p.somme());
  // affiche 3, puis 12, puis 60, puis 6, puis 6.
  p2 = new Paire2(1, 1);
  print(p2.somme());
  // utilise la methode de Paire2
  p.testHeritage(); // affiche true via methode d'un parent
}
