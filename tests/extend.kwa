
Paire p;
Paire pt;
Triple t;
Paire2 p2;

class Paire {
  int x;
  int y;

  method void constructor(int x, int y) {
    this.x = x;
    this.y = y;
  }

  method int somme() {
    return this.x + this.y;
  }

  method bool testHeritage() {
    return true;
  }
}

class Paire2 extends Paire {
  int x;
  int y;

  method void constructor(int x, int y) {
    this.x = x;
    this.y = y;
  }

  method int somme() {
    return this.x + this.y;
  }
}

class Triple extends Paire {
  int z;

  method void constructor(int x, int y, int z) {
    this.x = x;
    this.y = y;
    this.z = z;
  }

  method int somme() {
    return this.x + this.y + this.z;
  }

  method int produit() {
    return this.x * this.y * this.z;
  }
}

main {
  p = new Paire(1, 2);
  t = new Triple(3, 4, 5);
  assert(p.somme() == 3);
  assert(t.somme() == 12);
  assert(t.produit() == 60);
  pt = new Triple(1, 2, 3);
  assert(pt.somme() == 6);
  p = new Triple(1, 2, 3);
  assert(p.somme() == 6);
  p2 = new Paire2(1, 1);
  assert(p2.somme() == 2);
  // utilise la methode de Paire2
  assert(p.testHeritage());
}
